{{- include  "certManager.assertValidKind" . }}
apiVersion: apps/v1
kind: {{ .Values.certManager.kind }}
metadata:
  name: "{{- include "cert-exporter.fullname" . -}}-cert-manager"
  labels:
    {{- include "cert-exporter.certManagerLabels" . | nindent 4 }}
spec:
  {{- if eq .Values.certManager.kind "Deployment" }}
  replicas: {{ .Values.certManager.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cert-exporter.certManagerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cert-exporter.certManagerSelectorLabels" . | nindent 8 }}
        {{- with .Values.certManager.additionalPodLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.certManager.podAnnotations }}
      annotations:
        {{- toYaml .Values.certManager.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.certManager.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "cert-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.certManager.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.certManager.securityContext | nindent 12 }}
          image: "{{ .Values.certManager.image.repository  }}:{{ .Values.certManager.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.certManager.image.pullPolicy }}
          {{- with .Values.certManager.image.command  }}
          command:
            {{- toYaml . | nindent 12}}
          {{- end}}
          {{- with .Values.certManager.image.args  }}
          args:
            {{- toYaml . | nindent 12}}
          {{- end}}
          {{- with .Values.certManager.image.env }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.certManager.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.certManager.resources | nindent 12 }}
          volumeMounts:
           {{- toYaml .Values.certManager.volumeMounts | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.certManager.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.certManager.containerPort }}
            failureThreshold: 1
            periodSeconds: 10
      {{- with .Values.certManager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.certManager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.certManager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
          {{- toYaml .Values.certManager.volumes | nindent 8 }}
